require(ISLR)
dim(Weekly)
colnames(Weekly)
summary(Weekly)
pairs(Weekly, col=Weekly$Direction)
cor(Weekly[,-9])
logit = glm(Direction~Lag1+Lag2+Lag3+Lag4+Lag5+Volume, data=Weekly, family="binomial")
summary(logit)
prob = predict(logit, type="response")
pred = rep("Down", length(prob))
pred[prob>0.5] = "Up"
table(pred, Weekly$Direction)
subset_idx = (Weekly$Year<=2008) & (Weekly$Year>=1990)
week_logit = glm(Direction~Lag2, data=Weekly, subset=subset_idx, family="binomial")
summary(week_logit)
week_prob = predict(week_logit, type="response")
week_pred = rep("Down", length(week_prob))
week_pred[week_prob>0.5] = "Up"
table(week_pred, Weekly$Direction[subset_idx])
train_idx = (Weekly$Year<=2008) & (Weekly$Year>=1990)
week_logit = glm(Direction~Lag2, data=Weekly, subset=train_idx, family="binomial")
summary(week_logit)
week_prob = predict(week_logit, type="response")
week_pred = rep("Down", length(week_prob))
week_pred[week_prob>0.5] = "Up"
table(week_pred, Weekly$Direction[!train_idx])
week_prob = predict(week_logit,data=Weekly[!train_idx], type="response")
week_pred = rep("Down", length(week_prob))
week_pred[week_prob>0.5] = "Up"
table(week_pred, Weekly$Direction[!train_idx])
week_prob = predict(week_logit,data=Weekly[!train_idx], type="response")
week_pred = rep("Down", length(week_prob))
week_pred[week_prob>0.5] = "Up"
length(week_pred)
table(week_pred, Weekly$Direction[!train_idx])
week_prob = predict(week_logit,data=Weekly[!train_idx], type="response")
week_pred = rep("Down", length(week_prob))
week_pred[week_prob>0.5] = "Up"
length(train_idx)
table(week_pred, Weekly$Direction[!train_idx])
week_prob = predict(week_logit,data=Weekly[!train_idx], type="response")
week_pred = rep("Down", length(week_prob))
week_pred[week_prob>0.5] = "Up"
length(!train_idx)
table(week_pred, Weekly$Direction[!train_idx])
week_prob = predict(week_logit,data=Weekly[!train_idx], type="response")
week_pred = rep("Down", length(week_prob))
week_pred[week_prob>0.5] = "Up"
length(week_prob)
table(week_pred, Weekly$Direction[!train_idx])
week_prob = predict(week_logit,data=Weekly[!train_idx], type="response")
week_pred = rep("Down", length(week_prob))
week_pred[week_prob>0.5] = "Up"
length(!train_idx)
table(week_pred, Weekly$Direction[!train_idx])
week_prob = predict(week_logit,newdata = Weekly[!train_idx], type="response")
week_prob = predict(week_logit,newdata = Weekly[!train_idx,-9], type="response")
week_pred = rep("Down", length(week_prob))
week_pred[week_prob>0.5] = "Up"
length(!train_idx)
table(week_pred, Weekly$Direction[!train_idx])
attach(Weekly)
week_prob = predict(week_logit,newdata = Weekly[!train_idx,-9], type="response")
week_pred = rep("Down", length(week_prob))
week_pred[week_prob>0.5] = "Up"
length(!train_idx)
table(week_pred, Weekly$Direction[!train_idx])
mean(week_pred == Direction)
require(MASS)
week_lda = lda(Direction+Lag2, data=Weekly, subset = train_idx)
require(MASS)
week_lda = lda(Direction~Lag2, data=Weekly, subset = train_idx)
week_lda
require(MASS)
week_lda = lda(Direction~Lag2, data=Weekly, subset = train_idx)
week_lda
plot(week_lda)
week_prob = predict(week_lda,newdata = Weekly[!train_idx,-9], type="response")
week_pred = rep("Down", length(week_prob))
week_pred[week_prob>0.5] = "Up"
week_pred = predict(week_lda,newdata = Weekly[!train_idx,-9], type="response")
table(week_pred$class, Direction[!train_idx])
mean(week_pred$class==Direction[train_idx])
week_pred = predict(week_lda,newdata = Weekly[!train_idx,-9], type="response")
table(week_pred$class, Direction[!train_idx])
mean(week_pred$class==Direction[!train_idx])
train_data = Weekly[train_idx, ]
train_res = Weekly$Direction[!train_idx]
test_data = Weekly[!train_idx,]
week_qda = qda(train_data, Direction~Lag2)
train_data = Weekly[train_idx, ]
train_res = Weekly$Direction[!train_idx]
test_data = Weekly[!train_idx,]
week_qda = qda(Direction~Lag2, data= train_daa)
train_data = Weekly[train_idx, ]
train_res = Weekly$Direction[!train_idx]
test_data = Weekly[!train_idx,]
week_qda = qda(Direction~Lag2, data= train_data)
week_pred = predict(week_qda, newdata = test_data[,-9], type="response")
table(week_pred$class, test_data[,9])
mean(week_pred$class==test_data[,9])
train_data = Weekly[train_idx, -9]
train_res = Weekly$Direction[!train_idx]
test_data = Weekly[!train_idx, -9]
test_res = Weekly[!train_idx, 9]
week_qda = qda(Direction~Lag2, data= train_data)
train_data = Weekly[train_idx, -9]
train_res = Weekly$Direction[train_idx]
test_data = Weekly[!train_idx, -9]
test_res = Weekly[!train_idx, 9]
week_qda = qda(Direction~Lag2, data= train_data)
train_data = Weekly[train_idx, ]
train_res = Weekly$Direction[train_idx]
test_data = Weekly[!train_idx, -9]
test_res = Weekly[!train_idx, 9]
week_qda = qda(Direction~Lag2, data= train_data)
week_pred = predict(week_qda, newdata = test_data, type="response")
table(week_pred$class, test_res)
mean(week_pred$class==test_res)
require(class)
week_knn = knn(train_data[,-9], train_res, k=1)
require(class)
week_knn = knn(train_data[,-9], test_data, train_res, k=1)
table(week_knn, test_res)
week_knn
require(class)
week_knn = knn(train_data[,-9], test_data, train_res, k=1)
table(week_knn, test_res)
mean(week_knn==test_res)
require(class)
week_knn = knn(train_data[,2], test_data[,2], train_res, k=1)
require(class)
week_knn = knn(train_data[,3], test_data[,3], train_res, k=1)
dim(test_data)
require(class)
week_knn = knn(train_data[,3], test_data[,3], train_res, k=1)
dim(test_data)
dim(train_data)
require(class)
week_knn = knn(train_data[,3], test_data[,3], train_res, k=1)
require(class)
week_knn = knn(train_data[,3], train_res, test_data[,3], k=1)
dim(train_res)
require(class)
week_knn = knn(train_data[,3], train_res, test_data[,3], k=1)
train_data = Weekly[train_idx, ]
train_res = Weekly$Direction[train_idx]
test_data = Weekly[!train_idx, -9]
test_res = Weekly[!train_idx, 9]
week_qda = qda(Direction~Lag2, data= train_data)
week_pred = predict(week_qda, newdata = test_data, type="response")
table(week_pred$class, test_res)
mean(week_pred$class==test_res)
dim(train_res)
require(class)
week_knn = knn(train_data[,3], train_res, test_data[,3], k=1)
train_data = Weekly[train_idx, ]
train_res = Direction[train_idx]
print(train_res)
test_data = Weekly[!train_idx, -9]
test_res = Weekly[!train_idx, 9]
week_qda = qda(Direction~Lag2, data= train_data)
week_pred = predict(week_qda, newdata = test_data, type="response")
table(week_pred$class, test_res)
mean(week_pred$class==test_res)
train_data = Weekly[train_idx, ]
train_res = Direction[train_idx]
test_data = Weekly[!train_idx, -9]
test_res = Weekly[!train_idx, 9]
week_qda = qda(Direction~Lag2, data= train_data)
week_pred = predict(week_qda, newdata = test_data, type="response")
table(week_pred$class, test_res)
mean(week_pred$class==test_res)
train_data = Weekly[train_idx, ]
train_res = Direction[train_idx]
test_data = Weekly[!train_idx, -9]
test_res = Direction[!train_idx]
week_qda = qda(Direction~Lag2, data= train_data)
week_pred = predict(week_qda, newdata = test_data, type="response")
table(week_pred$class, test_res)
mean(week_pred$class==test_res)
dim(train_res)
dim(train_data)
require(class)
week_knn = knn(train_data[,3], train_res, test_data[,3], k=1)
dim(train_res)
dim(train_data)
require(class)
week_knn = knn(train_data[,3], as.matrix(train_res), test_data[,3], k=1)
type(train_res)
typeof(train_res)
dim(train_data)
require(class)
week_knn = knn(train_data[,3], as.matrix(train_res), test_data[,3], k=1)
typeof(train_res)
dim(train_data)
require(class)
week_knn = knn(train_data[,3], Direction[train_idx], test_data[,3], k=1)
typeof(train_res)
dim(train_data)
require(class)
week_knn = knn(train_data[,3], Direction[train_idx, 9], test_data[,3], k=1)
typeof(train_res)
dim(train_data)
require(class)
week_knn = knn(train_data[,3], test_data, train_res, k=1)
typeof(train_res)
dim(train_data)
require(class)
week_knn = knn(train_data[,3], test_data[,3], train_res, k=1)
typeof(test_data[,3])
dim(train_data[,3])
require(class)
week_knn = knn(train_data[,3], test_data[,3], train_res, k=1)
dim(test_data[,3])
dim(train_data[,3])
require(class)
week_knn = knn(train_data[,3], test_data[,3], train_res, k=1)
train_x = as.matrix(Lag2[train_idx])
test_x = as.matrix(Lag2[!train_idx])
require(class)
week_knn = knn(train_x, test_x, train_res, k=1)
table(week_knn, test_res)
mean(week_knn==test_res)
summary(Auto)
mpg_med = median(Auto)
mpg_med = median(Auto$mpg)
mpg01 = rep(1, dim(Auto)[1])
mpg01[Auto$mpg<mpg_med]=0
new_auto = data.frame(mpg01, Auto)
pairs(Auto[,-1])
pairs(Auto[,-1], col=Auto$mpg01)
pairs(new_auto[,-1], col=new_auto$mpg01)
pairs(new_auto[,-2], col=new_auto$mpg01)
pairs(new_auto[,-c(1,2)], col=new_auto$mpg01)
col(new_auto)
pairs(new_auto[,-c(1,2)], col=new_auto$mpg01)
colnames(new_auto)
pairs(new_auto[,-c(1,2)], col=new_auto$mpg01)
colnames(new_auto)
pairs(new_auto[,-c(1,2)], col=new_auto$mpg01)
cor(new_auto[,-2])
colnames(new_auto)
pairs(new_auto[,-c(1,2)], col=new_auto$mpg01)
cor(new_auto[,-1])
colnames(new_auto)
pairs(new_auto[,-c(1,2)], col=new_auto$mpg01)
cor(new_auto[,-c(1,9)])
colnames(new_auto)
pairs(new_auto[,-c(1,2)], col=new_auto$mpg01)
typeof(new_auto)
str(new_auto)
pairs(new_auto[,-c(1,2)], col=new_auto$mpg01)
typeof(new_auto)
str(new_auto)
pairs(new_auto[,-c(1,2)], col=new_auto$mpg01)
cor(new_auto[,-10])
str(new_auto)
pairs(new_auto[,-c(1,2)], col=new_auto$mpg01)
cor(new_auto[,-c(1,10)])
runif(1, 10)
runif(1, 10, 1)
runif(10)
runif(n = 10)
sample(new_auto, size = 0.8*length(new_auto))
n = length(new_auto)
sample(1:n, 0.8)
n = length(new_auto)
train_idx = sample(1:n, 0.8)
n = length(new_auto)
train_idx = sample(1:n, 0.8)
print(train_idx)
